============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.2, pluggy-1.5.0
rootdir: /home/bridge/code/incubyte
plugins: Faker-24.4.0, anyio-4.4.0
collected 10 items

test.py F..sFFFFFF                                                       [100%]

=================================== FAILURES ===================================
________________ TestAddFunction.test_add_function_three_digits ________________

self = <test.TestAddFunction object at 0x749e45e0b370>

    def test_add_function_three_digits(self):
        response = add('//[,]\n1,2,3')
>       assert response == 6
E       assert 0 == 6

test.py:10: AssertionError
______________ TestAddFunction.test_support_multiple_delimieters _______________

self = <test.TestAddFunction object at 0x749e45e0ba00>

    def test_support_multiple_delimieters(self):
        response = add('//[;]\n1;2;3')
>       assert response == 6
E       assert 0 == 6

test.py:28: AssertionError
_______________ TestAddFunction.test_handle_invalid_syntax_input _______________

self = <test.TestAddFunction object at 0x749e45e0bc10>

    def test_handle_invalid_syntax_input(self):
        with pytest.raises(AddHandlerException, match="Improply created input pattern"):
            add('/[;]\n124')
    
        with pytest.raises(AddHandlerException, match="Improply created input pattern"):
            add('//[;]123')
    
>       with pytest.raises(AddHandlerException, match="Improply created input pattern"):
E       Failed: DID NOT RAISE <class 'main.AddHandlerException'>

test.py:37: Failed
_________________ TestAddFunction.test_handle_negative_numebr __________________

self = <test.TestAddFunction object at 0x749e45e0bd30>

    def test_handle_negative_numebr(self):
>       with pytest.raises(AddHandlerException, match="negative numbers not allowed -1"):
E       Failed: DID NOT RAISE <class 'main.AddHandlerException'>

test.py:42: Failed
_________________ TestAddFunction.test_handle_negative_numebrs _________________

self = <test.TestAddFunction object at 0x749e45e0bee0>

    def test_handle_negative_numebrs(self):
>       with pytest.raises(AddHandlerException, match="negative numbers not allowed -1,-3"):
E       Failed: DID NOT RAISE <class 'main.AddHandlerException'>

test.py:47: Failed
_________________ TestAddFunction.test_prevent_4_digit_numbers _________________

self = <test.TestAddFunction object at 0x749e45e09c60>

    def test_prevent_4_digit_numbers(self):
        response = add('//[;]\n1;2;1000;3')
>       assert response == 6
E       assert 0 == 6

test.py:52: AssertionError
______________ TestAddFunction.test_delimiter_length_more_than_1 _______________

self = <test.TestAddFunction object at 0x749e45e09990>

    def test_delimiter_length_more_than_1(self):
        response = add('//[;]\n1;2;1000;3')
>       assert response == 6
E       assert 0 == 6

test.py:57: AssertionError
=============================== warnings summary ===============================
test.py::TestAddFunction::test_add_function_three_digits
test.py::TestAddFunction::test_support_multiple_delimieters
  /home/bridge/code/incubyte/main.py:28: FutureWarning: Possible nested set at position 1
    numbers = re.split('[{}]'.format(delimiters), number_input)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test.py::TestAddFunction::test_add_function_three_digits - assert 0 == 6
FAILED test.py::TestAddFunction::test_support_multiple_delimieters - assert 0...
FAILED test.py::TestAddFunction::test_handle_invalid_syntax_input - Failed: D...
FAILED test.py::TestAddFunction::test_handle_negative_numebr - Failed: DID NO...
FAILED test.py::TestAddFunction::test_handle_negative_numebrs - Failed: DID N...
FAILED test.py::TestAddFunction::test_prevent_4_digit_numbers - assert 0 == 6
FAILED test.py::TestAddFunction::test_delimiter_length_more_than_1 - assert 0...
============== 7 failed, 2 passed, 1 skipped, 2 warnings in 0.05s ==============
